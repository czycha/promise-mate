{"version":3,"file":"promise-mate.js","sources":["../src/index.js"],"sourcesContent":["import isEqual from 'fast-deep-equal'\nimport isPrimitive from 'just-is-primitive'\n\nfunction pushIfAbsent(arr, val) {\n  let indexOf = -1\n  if (isPrimitive(val)) {\n    indexOf = arr.indexOf(val)\n  } else {\n    for(var i = 0; i < arr.length; i++) {\n      if (isEqual(arr[i], val)) {\n        indexOf = i\n        break\n      }\n    }\n  }\n  if (indexOf === -1) {\n    arr.push(val)\n  }\n  return indexOf === -1 ? (arr.length - 1) : indexOf\n}\n\nexport default class Mate {\n  constructor (definitions = {}) {\n    this.definitions = definitions\n  }\n  define (key, definition) {\n    this.definitions[key] = definition\n    return this\n  }\n  undefine (key) {\n    delete this.definitions[key]\n    return this\n  }\n  all (actions) {\n    return Mate.all(this.definitions, actions)\n  }\n  static all (definitions, actions) {\n    const requirements = []\n    const map = []\n    for (let action of actions) {\n      actionMap = []\n      if (!Array.isArray(action.requires)) {\n        actionMap.push(pushIfAbsent(requirements, action.requires))\n      } else {\n        for (let req of action.requires) {\n          actionMap.push(pushIfAbsent(requirements, req))\n        }\n      }\n      map.push(actionMap)\n    }\n\n    const promises = []\n    for (let req of requirements) {\n      if ('string' === (typeof req) && definitions.hasOwnProperty(req)) {\n        promises.push(definitions[req]())\n      } else {\n        promises.push(req)\n      }\n    }\n\n    return (\n      Promise\n        .all(promises)\n        .then((results) => {\n          const ret = []\n          for (let i = 0; i < actions.length; i++) {\n            const action = actions[i]\n            const reqIndexes = map[i]\n            const args = []\n            for (let req of reqIndexes) {\n              args.push(results[req])\n            }\n            ret.push((typeof action.then) === 'function' ? action.then(...args) : action.then)\n          }\n          return ret\n        })\n    )\n  }\n}\n"],"names":["pushIfAbsent","arr","val","indexOf","isPrimitive","i","length","isEqual","push","Mate","constructor","definitions","define","key","definition","this","undefine","all","actions","requirements","map","let","action","actionMap","Array","isArray","requires","promises","req","hasOwnProperty","Promise","then","results","ret","args"],"mappings":"4IAGA,SAASA,EAAaC,EAAKC,OACrBC,GAAW,KACXC,EAAYF,GACdC,EAAUF,EAAIE,QAAQD,YAElB,IAAIG,EAAI,EAAGA,EAAIJ,EAAIK,OAAQD,OACzBE,EAAQN,EAAII,GAAIH,GAAM,CACxBC,EAAUE,eAKC,IAAbF,GACFF,EAAIO,KAAKN,IAES,IAAbC,EAAkBF,EAAIK,OAAS,EAAKH,EAG9B,IAAMM,EACnBC,SAAaC,kBAAc,SACpBA,YAAcA,GAErBC,YAAAA,gBAAQC,EAAKC,eACNH,YAAYE,GAAOC,EACjBC,MAETC,YAAAA,kBAAUH,iBACDE,KAAKJ,YAAYE,GACjBE,MAETE,YAAAA,aAAKC,UACIT,EAAKQ,IAAIF,KAAKJ,YAAaO,IAEpCT,EAAOQ,aAAKN,EAAaO,WACjBC,EAAe,GACfC,EAAM,SACOF,kBAAS,CAAvBG,IAAIC,UACPC,UAAY,GACPC,MAAMC,QAAQH,EAAOI,cAGnB,UAAWJ,EAAOI,yBAAU,CAC/BH,UAAUf,KAAKR,EAAamB,cAH9BI,UAAUf,KAAKR,EAAamB,EAAcG,EAAOI,WAMnDN,EAAIZ,KAAKe,mBAGLI,EAAW,SACDR,kBAAc,CAAzBE,IAAIO,OACH,iBAAqBA,GAAQjB,EAAYkB,eAAeD,KACjDpB,KAAKG,EAAYiB,MAE1BD,EAASnB,KAAKoB,UAKhBE,QACGb,IAAIU,GACJI,cAAMC,WACCC,EAAM,GACH5B,EAAI,EAAGA,EAAIa,EAAQZ,OAAQD,IAAK,SACjCiB,EAASJ,EAAQb,GAEjB6B,EAAO,SADMd,EAAIf,mBAEK,CAC1B6B,EAAK1B,KAAKwB,WAERxB,KAA8B,mBAAjBc,EAAOS,KAAuBT,EAAOS,WAAKT,EAAGY,GAAQZ,EAAOS,aAExEE"}